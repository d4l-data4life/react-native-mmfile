///
/// HybridMmfileBaseSpec.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#include "HybridMmfileBaseSpec.hpp"

namespace margelo::nitro::mmfile {

  void HybridMmfileBaseSpec::loadHybridMethods() {
    // load base methods/properties
    HybridObject::loadHybridMethods();
    // load custom methods/properties
    registerHybrids(this, [](Prototype& prototype) {
      prototype.registerHybridGetter("size", &HybridMmfileBaseSpec::getSize);
      prototype.registerHybridGetter("capacity", &HybridMmfileBaseSpec::getCapacity);
      prototype.registerHybridGetter("readOnly", &HybridMmfileBaseSpec::getReadOnly);
      prototype.registerHybridGetter("filePath", &HybridMmfileBaseSpec::getFilePath);
      prototype.registerHybridGetter("isOpen", &HybridMmfileBaseSpec::getIsOpen);
      prototype.registerHybridMethod("close", &HybridMmfileBaseSpec::close);
      prototype.registerHybridMethod("resize", &HybridMmfileBaseSpec::resize);
      prototype.registerHybridMethod("clear", &HybridMmfileBaseSpec::clear);
      prototype.registerHybridMethod("append", &HybridMmfileBaseSpec::append);
      prototype.registerHybridMethod("write", &HybridMmfileBaseSpec::write);
      prototype.registerHybridMethod("read", &HybridMmfileBaseSpec::read);
    });
  }

} // namespace margelo::nitro::mmfile
