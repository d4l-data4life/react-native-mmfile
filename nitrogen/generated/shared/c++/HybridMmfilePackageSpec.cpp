///
/// HybridMmfilePackageSpec.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#include "HybridMmfilePackageSpec.hpp"

namespace margelo::nitro::mmfile {

  void HybridMmfilePackageSpec::loadHybridMethods() {
    // load base methods/properties
    HybridObject::loadHybridMethods();
    // load custom methods/properties
    registerHybrids(this, [](Prototype& prototype) {
      prototype.registerHybridGetter("baseDirectory", &HybridMmfilePackageSpec::getBaseDirectory);
      prototype.registerHybridSetter("baseDirectory", &HybridMmfilePackageSpec::setBaseDirectory);
      prototype.registerHybridMethod("openMmfile", &HybridMmfilePackageSpec::openMmfile);
      prototype.registerHybridMethod("openEncryptedMmfile", &HybridMmfilePackageSpec::openEncryptedMmfile);
      prototype.registerHybridMethod("fileExists", &HybridMmfilePackageSpec::fileExists);
      prototype.registerHybridMethod("getFileSize", &HybridMmfilePackageSpec::getFileSize);
      prototype.registerHybridMethod("getEncryptedFileSize", &HybridMmfilePackageSpec::getEncryptedFileSize);
      prototype.registerHybridMethod("readDir", &HybridMmfilePackageSpec::readDir);
      prototype.registerHybridMethod("unlink", &HybridMmfilePackageSpec::unlink);
    });
  }

} // namespace margelo::nitro::mmfile
